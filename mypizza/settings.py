"""
Django settings for mypizza project.

Generated by 'django-admin startproject' using Django 3.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-q11yj5te_dv@%h0f6&ap24c9czfdu+p!)+45@x5#-af5%x(uy3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

is_aws_environment = os.environ.setdefault('IS_AWS_ENVIRONMENT', 'False')
is_aws_environment = is_aws_environment == 'True'
print(f'is_aws_environment : {is_aws_environment}')
if is_aws_environment:
    DEBUG = True

if is_aws_environment:
    ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'pizzap',
    'storages',
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mypizza.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mypizza.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
# TODO : add postgres creds
if is_aws_environment:
    pass

if is_aws_environment:
    AWS_ACCESS_KEY_ID = os.environ.setdefault('aws_access_key_id', '')
    AWS_SECRET_ACCESS_KEY = os.environ.setdefault('aws_secret_access_key', '')
    AWS_SESSION_TOKEN = os.environ.setdefault('aws_session_token', '')
    AWS_STORAGE_BUCKET_NAME = 'mypizzabucket'
    AWS_S3_REGION_NAME = 'us-east-1'
    AWS_S3_FILE_OVERWRITE = False
    AWS_S3_VERIFY = True
    DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    STATICFILES_STORAGE = 'storages.backends.s3boto3.S3StaticStorage'

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = ['static']
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_URL = 'media-url/'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

print(locals())


'''
export aws_access_key_id=ASIA4ZW5JXSNFDLZ6TNQ
export aws_secret_access_key=I6cIcDxEh5vsbG6IWtO+rpuArvaYE1r1edOaeJoO
export aws_session_token=FwoGZXIvYXdzEHcaDMKTKsvJ/0iViiyPoiLKAUBTrd9TxaivOWZwjf/fgq85bzQDYQvTln4p7cLnqOZDlChhZGcNSgUpXzC4UJLSsne34/RwVAvfIPmqESBii8jvOgPx2Ir/8b4VTjdlbz0cOaN5gdeuIFXYbpycrxjZ0XmIfz+2is6eu/RrqhPwmcDnD2FElVBkaEd5sVadXwuBSBL0FM52OK2Fz6O5bjVBqIF6E1V8TE+6IoecidvrNGb83pMWf7NeG8cuyXqdhK4BpRPQUD9vNoIYscGBxfM9tlVurc40VyZ23P8o2/zejQYyLTZ/nFT+W+z6SBvnSTJ8a3/55K67S0B1IGLro6TYCPQzwlErkS8ZvtFhQ3FSSA==

export AWS_ACCESS_KEY_ID=ASIA4ZW5JXSNFDLZ6TNQ
export AWS_SECRET_ACCESS_KEY=I6cIcDxEh5vsbG6IWtO+rpuArvaYE1r1edOaeJoO
export AWS_SESSION_TOKEN=FwoGZXIvYXdzEHcaDMKTKsvJ/0iViiyPoiLKAUBTrd9TxaivOWZwjf/fgq85bzQDYQvTln4p7cLnqOZDlChhZGcNSgUpXzC4UJLSsne34/RwVAvfIPmqESBii8jvOgPx2Ir/8b4VTjdlbz0cOaN5gdeuIFXYbpycrxjZ0XmIfz+2is6eu/RrqhPwmcDnD2FElVBkaEd5sVadXwuBSBL0FM52OK2Fz6O5bjVBqIF6E1V8TE+6IoecidvrNGb83pMWf7NeG8cuyXqdhK4BpRPQUD9vNoIYscGBxfM9tlVurc40VyZ23P8o2/zejQYyLTZ/nFT+W+z6SBvnSTJ8a3/55K67S0B1IGLro6TYCPQzwlErkS8ZvtFhQ3FSSA==


'''